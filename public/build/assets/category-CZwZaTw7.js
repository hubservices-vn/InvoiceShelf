import{a4 as l,s,a1 as n,u as r}from"./main-DuDaNFOP.js";const p=(d=!1)=>{const u=d?window.pinia.defineStore:l,{global:c}=window.i18n;return u({id:"category",state:()=>({categories:[],currentCategory:{id:null,name:"",parent_id:null,type:"",image_url:"",description:""},editCategory:null}),getters:{isEdit:e=>!!e.currentCategory.id},actions:{fetchCategories(e){return new Promise((a,i)=>{s.get("/api/v1/categories",{params:e}).then(t=>{this.categories=t.data.data,a(t)}).catch(t=>{n(t),i(t)})})},fetchCategory(e){return new Promise((a,i)=>{s.get(`/api/v1/categories/${e}`).then(t=>{this.currentCategory=t.data.data,a(t)}).catch(t=>{n(t),i(t)})})},addCategory(e){return new Promise((a,i)=>{s.post("/api/v1/categories",e).then(t=>{this.categories.push(t.data.data),r().showNotification({type:"success",message:c.t("settings.category.created_message")}),a(t)}).catch(t=>{n(t),i(t)})})},updateCategoryImage(e,a){return console.log(a),new Promise((i,t)=>{s.post(`/api/v1/categories/${e}/upload-image`,a).then(o=>{i(o)}).catch(o=>{n(o),t(o)})})},updateCategory(e){return new Promise((a,i)=>{s.put(`/api/v1/categories/${e.id}`,e).then(t=>{if(t.data){let o=this.categories.findIndex(h=>h.id===t.data.data.id);this.categories[o]=e.categories,r().showNotification({type:"success",message:c.t("settings.category.updated_message")})}a(t)}).catch(t=>{n(t),i(t)})})},deleteCategory(e){return new Promise(a=>{s.delete(`/api/v1/categories/${e}`).then(i=>{let t=this.categories.findIndex(g=>g.id===e);this.categories.splice(t,1),r().showNotification({type:"success",message:c.t("settings.category.deleted_message")}),a(i)}).catch(i=>{n(i),console.error(i)})})}}})()};export{p as u};
